{"Structs/AnyTweak.html#/s:vPs8Hashable9hashValueSi":{"name":"hashValue","abstract":"<p>When combined with AnyTweak, this provides our type-erasure around Tweak<T></p>","parent_name":"AnyTweak"},"Structs/AnyTweak.html#/s:vV8Mixpanel8AnyTweak12tweakClusterGSaS0__":{"name":"tweakCluster","abstract":"<p>Allows easy tweak initialization by clustering tweaks together for A/B Testing</p>","parent_name":"AnyTweak"},"Structs/Tweak.html#/s:FV8Mixpanel5TweakcFT9tweakNameSS12defaultValuexSSSS_GS0_x_":{"name":"init(tweakName:defaultValue:_:_:)","abstract":"<p>Initializer for a Tweak for A/B Testing</p>","parent_name":"Tweak"},"Structs/Tweak.html#/s:Fe8MixpanelRxS_13TweakableTypexs12SignedNumberrVS_5TweakcFT9tweakNameSS12defaultValuex3minGSqx_3maxGSqx_8stepSizeGSqx_SSSS_GS2_x_":{"name":"init(tweakName:defaultValue:min:max:stepSize:_:_:)","abstract":"<p>Creates a Tweak<T> where T: SignedNumberType","parent_name":"Tweak"},"Structs/Tweak.html#/s:vV8Mixpanel5Tweak9hashValueSi":{"name":"hashValue","abstract":"<p>Hashing for a Tweak for A/B Testing in order for it to be stored.</p>","parent_name":"Tweak"},"Structs/Tweak.html#/s:vP8Mixpanel16TweakClusterType12tweakClusterGSaVS_8AnyTweak_":{"name":"tweakCluster","abstract":"<p>Extend Tweak to support easy initialization of a TweakStore</p>","parent_name":"Tweak"},"Structs/MixpanelTweaks.html#/s:ZvV8Mixpanel14MixpanelTweaks12defaultStoreCS_10TweakStore":{"name":"defaultStore","abstract":"<p>The default store that holds the Tweaks</p>","parent_name":"MixpanelTweaks"},"Structs/MixpanelTweaks.html#/s:ZFV8Mixpanel14MixpanelTweaks9setTweaksFT6tweaksGSaPS_16TweakClusterType___T_":{"name":"setTweaks(tweaks:)","abstract":"<p>setTweaks needs to be called to add the defined Tweaks into the environment.</p>","parent_name":"MixpanelTweaks"},"Structs/MixpanelTweaks.html":{"name":"MixpanelTweaks","abstract":"<p>The MixpanelTweaks struct that needs to be extended to define new Tweaks for A/B testing</p>"},"Structs/Tweak.html":{"name":"Tweak","abstract":"<p>Tweaks let you adjust things on the fly."},"Structs/AnyTweak.html":{"name":"AnyTweak","abstract":"<p>A type-erasure around Tweak<T> for A/B Testing.</p>"},"Protocols/TweakLibraryType.html#/s:ZvP8Mixpanel16TweakLibraryType12defaultStoreCS_10TweakStore":{"name":"defaultStore","abstract":"<p>the default tweak store</p>","parent_name":"TweakLibraryType"},"Protocols/TweakLibraryType.html#/s:ZFE8MixpanelPS_16TweakLibraryType6assignuRd__S_13TweakableTyperFGVS_5Tweakqd___qd__":{"name":"assign(_:)","abstract":"<p>Returns the current value for a tweak from the TweakLibrary&rsquo;s default store.</p>","parent_name":"TweakLibraryType"},"Protocols/TweakLibraryType.html#/s:ZFE8MixpanelPS_16TweakLibraryType4binduRd__S_13TweakableTyperFTGVS_5Tweakqd___7bindingFqd__T__T_":{"name":"bind(_:binding:)","abstract":"<p>Immediately binds the currentValue of a given tweak, and then continues to update whenever the tweak changes.</p>","parent_name":"TweakLibraryType"},"Protocols/MixpanelType.html#/s:FP8Mixpanel12MixpanelType17isValidNestedTypeFT_Sb":{"name":"isValidNestedType()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.</p>","parent_name":"MixpanelType"},"Protocols/TweakableType.html#/s:ZvP8Mixpanel13TweakableType17tweakViewDataTypeOS_17TweakViewDataType":{"name":"tweakViewDataType","abstract":"<p>The data type of the TweakableType</p>","parent_name":"TweakableType"},"Protocols/TweakClusterType.html#/s:vP8Mixpanel16TweakClusterType12tweakClusterGSaVS_8AnyTweak_":{"name":"tweakCluster","abstract":"<p>The tweak cluster to allow easy initialization of Tweaks</p>","parent_name":"TweakClusterType"},"Protocols/MixpanelDelegate.html#/s:FP8Mixpanel16MixpanelDelegate17mixpanelWillFlushFCS_16MixpanelInstanceSb":{"name":"mixpanelWillFlush(_:)","abstract":"<p>Asks the delegate if data should be uploaded to the server.</p>","parent_name":"MixpanelDelegate"},"Protocols/MixpanelDelegate.html":{"name":"MixpanelDelegate","abstract":"<p>Delegate protocol for controlling the Mixpanel API&rsquo;s network behavior.</p>"},"Protocols/TweakClusterType.html":{"name":"TweakClusterType","abstract":"<p>This protocol allows for easy initialization of TweakStore."},"Protocols/TweakableType.html":{"name":"TweakableType","abstract":"<p>To add a new <T> to our Tweak<T>, make T conform to this protocol.</p>"},"Protocols/MixpanelType.html":{"name":"MixpanelType","abstract":"<p>Property keys must be String objects and the supported value types need to conform to MixpanelType."},"Protocols/TweakLibraryType.html":{"name":"TweakLibraryType","abstract":"<p>Create a public struct in your application that conforms to this protocol to declare your own tweaks!</p>"},"Instance Methods.html#/s:FC8Mixpanel16MixpanelInstance16showNotificationFT_T_":{"name":"showNotification()","abstract":"<p>Shows a notification if one is available.</p>"},"Instance Methods.html#/s:FC8Mixpanel16MixpanelInstance8identifyFT10distinctIdSS_T_":{"name":"identify(distinctId:)","abstract":"<p>Sets the distinct ID of the current user.</p>"},"Instance Methods.html#/s:FC8Mixpanel16MixpanelInstance11createAliasFTSS10distinctIdSS_T_":{"name":"createAlias(_:distinctId:)","abstract":"<p>Creates a distinctId alias from alias to the current id.</p>"},"Instance Methods.html#/s:FC8Mixpanel16MixpanelInstance16showNotificationFT2IDSi_T_":{"name":"showNotification(ID:)","abstract":"<p>Shows a notification with the given ID</p>"},"Instance Methods.html#/s:FC8Mixpanel16MixpanelInstance7archiveFT_T_":{"name":"archive()","abstract":"<p>Writes current project info including the distinct Id, super properties,"},"Instance Methods.html#/s:FC8Mixpanel16MixpanelInstance4timeFT5eventSS_T_":{"name":"time(event:)","abstract":"<p>Starts a timer that will be stopped and added as a property when a"},"Instance Methods.html#/s:FC8Mixpanel16MixpanelInstance5resetFT_T_":{"name":"reset()","abstract":"<p>Clears all stored properties including the distinct Id."},"Instance Methods.html#/s:FC8Mixpanel16MixpanelInstance5flushFT10completionGSqFT_T___T_":{"name":"flush(completion:)","abstract":"<p>Uploads queued data to the Mixpanel server.</p>"},"Instance Methods.html#/s:FC8Mixpanel16MixpanelInstance24fetchNotificationPayloadFT10completionFGSqGVs10DictionarySSPs9AnyObject___T__T_":{"name":"fetchNotificationPayload(completion:)","abstract":"<p>Returns the payload of a notification if available</p>"},"Instance Methods.html#/s:FC8Mixpanel16MixpanelInstance23unregisterSuperPropertyFSST_":{"name":"unregisterSuperProperty(_:)","abstract":"<p>Removes a previously registered super property.</p>"},"Instance Methods.html#/s:FC8Mixpanel16MixpanelInstance16showNotificationFT4typeSS_T_":{"name":"showNotification(type:)","abstract":"<p>Shows a notification with the given type if one is available.</p>"},"Instance Methods.html#/s:FC8Mixpanel16MixpanelInstance22currentSuperPropertiesFT_GVs10DictionarySSP__":{"name":"currentSuperProperties()","abstract":"<p>Returns the currently set super properties.</p>"},"Instance Methods.html#/s:FC8Mixpanel16MixpanelInstance27registerSuperPropertiesOnceFTGVs10DictionarySSPS_12MixpanelType__12defaultValueGSqPS2____T_":{"name":"registerSuperPropertiesOnce(_:defaultValue:)","abstract":"<p>Registers super properties without overwriting ones that have already been set,"},"Instance Methods.html#/s:FC8Mixpanel16MixpanelInstance15joinExperimentsFT8callbackGSqFT_T___T_":{"name":"joinExperiments(callback:)","abstract":"<p>Join any experiments (A/B tests) that are available for the current user.</p>"},"Instance Methods.html#/s:FC8Mixpanel16MixpanelInstance20clearSuperPropertiesFT_T_":{"name":"clearSuperProperties()","abstract":"<p>Clears all currently set super properties.</p>"},"Instance Methods.html#/s:FC8Mixpanel16MixpanelInstance23registerSuperPropertiesFGVs10DictionarySSPS_12MixpanelType__T_":{"name":"registerSuperProperties(_:)","abstract":"<p>Registers super properties, overwriting ones that have already been set.</p>"},"Instance Methods.html#/s:FC8Mixpanel16MixpanelInstance16clearTimedEventsFT_T_":{"name":"clearTimedEvents()","abstract":"<p>Clears all current event timers.</p>"},"Instance Methods.html#/s:FC8Mixpanel16MixpanelInstance21trackPushNotificationFTGVs10DictionaryVs11AnyHashableP__5eventSS_T_":{"name":"trackPushNotification(_:event:)","abstract":"<p>Track a push notification using its payload sent from Mixpanel.</p>"},"Instance Methods.html#/s:FC8Mixpanel16MixpanelInstance5trackFT5eventGSqSS_10propertiesGSqGVs10DictionarySSPS_12MixpanelType____T_":{"name":"track(event:properties:)","abstract":"<p>Tracks an event with properties."},"Functions/==(_:_:).html#/s:tF8Mixpaneloi2eeuRxS_13TweakableTyperFTGVS_5Tweakx_GS1_x__SbL_1TMx":{"name":"T","abstract":"Undocumented","parent_name":"==(_:_:)"},"Functions/==(_:_:).html":{"name":"==(_:_:)","abstract":"<p>Comparator between two tweaks for A/B Testing.</p>"},"Functions.html#/s:F8Mixpaneloi2eeFTVS_8AnyTweakS0__Sb":{"name":"==(_:_:)","abstract":"<p>Comparator between two tweaks for A/B Testing.</p>"},"Extensions/Dictionary.html#/s:FE8MixpanelVs10Dictionary17isValidNestedTypeFT_Sb":{"name":"isValidNestedType()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.</p>","parent_name":"Dictionary"},"Extensions/Array.html#/s:FE8MixpanelSa17isValidNestedTypeFT_Sb":{"name":"isValidNestedType()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.</p>","parent_name":"Array"},"Extensions/NSNull.html#/s:FE8MixpanelCSo6NSNull17isValidNestedTypeFT_Sb":{"name":"isValidNestedType()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"NSNull"},"Extensions/URL.html#/s:FE8MixpanelV10Foundation3URL17isValidNestedTypeFT_Sb":{"name":"isValidNestedType()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"URL"},"Extensions/Date.html#/s:FE8MixpanelV10Foundation4Date17isValidNestedTypeFT_Sb":{"name":"isValidNestedType()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"Date"},"Extensions/Float.html#/s:FE8MixpanelSf17isValidNestedTypeFT_Sb":{"name":"isValidNestedType()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"Float"},"Extensions/UInt.html#/s:FE8MixpanelSu17isValidNestedTypeFT_Sb":{"name":"isValidNestedType()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"UInt"},"Extensions/String.html#/s:ZvE8MixpanelSS17tweakViewDataTypeOS_17TweakViewDataType":{"name":"tweakViewDataType","abstract":"<p>TweakableType supports the string type</p>","parent_name":"String"},"Extensions/String.html#/s:FE8MixpanelSS17isValidNestedTypeFT_Sb":{"name":"isValidNestedType()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"String"},"Extensions/UIColor.html#/s:ZvE8MixpanelCSo7UIColor17tweakViewDataTypeOS_17TweakViewDataType":{"name":"tweakViewDataType","abstract":"<p>TweakableType supports the uiColor type</p>","parent_name":"UIColor"},"Extensions/UIColor.html#/s:FE8MixpanelCSo7UIColorcFT4hex4Su_S0_":{"name":"init(hex4:)","abstract":"<p>The shorthand four-digit hexadecimal representation of color with alpha.</p>","parent_name":"UIColor"},"Extensions/Double.html#/s:ZvE8MixpanelSd17tweakViewDataTypeOS_17TweakViewDataType":{"name":"tweakViewDataType","abstract":"<p>TweakableType supports the double type</p>","parent_name":"Double"},"Extensions/Double.html#/s:FE8MixpanelSd17isValidNestedTypeFT_Sb":{"name":"isValidNestedType()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"Double"},"Extensions/CGFloat.html#/s:ZvE8MixpanelV12CoreGraphics7CGFloat17tweakViewDataTypeOS_17TweakViewDataType":{"name":"tweakViewDataType","abstract":"<p>TweakableType supports the cgFloat type</p>","parent_name":"CGFloat"},"Extensions/Int.html#/s:ZvE8MixpanelSi17tweakViewDataTypeOS_17TweakViewDataType":{"name":"tweakViewDataType","abstract":"<p>TweakableType supports the integer type</p>","parent_name":"Int"},"Extensions/Int.html#/s:FE8MixpanelSi17isValidNestedTypeFT_Sb":{"name":"isValidNestedType()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"Int"},"Extensions/Bool.html#/s:ZvE8MixpanelSb17tweakViewDataTypeOS_17TweakViewDataType":{"name":"tweakViewDataType","abstract":"<p>TweakableType supports the boolean type</p>","parent_name":"Bool"},"Extensions/Bool.html#/s:FE8MixpanelSb17isValidNestedTypeFT_Sb":{"name":"isValidNestedType()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"Bool"},"Extensions/Bool.html":{"name":"Bool"},"Extensions/Int.html":{"name":"Int"},"Extensions/CGFloat.html":{"name":"CGFloat","abstract":"Undocumented"},"Extensions/Double.html":{"name":"Double"},"Extensions/UIColor.html":{"name":"UIColor","abstract":"Undocumented"},"Extensions/String.html":{"name":"String"},"Extensions/UInt.html":{"name":"UInt"},"Extensions/Float.html":{"name":"Float"},"Extensions/Date.html":{"name":"Date"},"Extensions/URL.html":{"name":"URL"},"Extensions/NSNull.html":{"name":"NSNull","abstract":"Undocumented"},"Extensions/Array.html":{"name":"Array"},"Extensions/Dictionary.html":{"name":"Dictionary"},"Enums/TweakViewDataType.html#/s:FO8Mixpanel17TweakViewDataType7booleanFMS0_S0_":{"name":"boolean","abstract":"<p>TweakableType supports the boolean type</p>","parent_name":"TweakViewDataType"},"Enums/TweakViewDataType.html#/s:FO8Mixpanel17TweakViewDataType7integerFMS0_S0_":{"name":"integer","abstract":"<p>TweakableType supports the integer type</p>","parent_name":"TweakViewDataType"},"Enums/TweakViewDataType.html#/s:FO8Mixpanel17TweakViewDataType7cgFloatFMS0_S0_":{"name":"cgFloat","abstract":"<p>TweakableType supports the cgFloat type</p>","parent_name":"TweakViewDataType"},"Enums/TweakViewDataType.html#/s:FO8Mixpanel17TweakViewDataType6doubleFMS0_S0_":{"name":"double","abstract":"<p>TweakableType supports the double type</p>","parent_name":"TweakViewDataType"},"Enums/TweakViewDataType.html#/s:FO8Mixpanel17TweakViewDataType7uiColorFMS0_S0_":{"name":"uiColor","abstract":"<p>TweakableType supports the uiColor type</p>","parent_name":"TweakViewDataType"},"Enums/TweakViewDataType.html#/s:FO8Mixpanel17TweakViewDataType6stringFMS0_S0_":{"name":"string","abstract":"<p>TweakableType supports the string type</p>","parent_name":"TweakViewDataType"},"Enums/TweakViewDataType.html":{"name":"TweakViewDataType","abstract":"<p>The data types that are currently supported for SwiftTweaks."},"Classes/Mixpanel.html#/s:ZFC8Mixpanel8Mixpanel10initializeFT5tokenSS13launchOptionsGSqGVs10DictionaryVSC29UIApplicationLaunchOptionsKeyP___13flushIntervalSd12instanceNameSS_CS_16MixpanelInstance":{"name":"initialize(token:launchOptions:flushInterval:instanceName:)","abstract":"<p>Initializes an instance of the API with the given project token.</p>","parent_name":"Mixpanel"},"Classes/Mixpanel.html#/initialize(token:flushInterval:instanceName:)":{"name":"initialize(token:flushInterval:instanceName:)","abstract":"Undocumented","parent_name":"Mixpanel"},"Classes/Mixpanel.html#/s:ZFC8Mixpanel8Mixpanel11getInstanceFT4nameSS_GSqCS_16MixpanelInstance_":{"name":"getInstance(name:)","abstract":"<p>Gets the mixpanel instance with the given name</p>","parent_name":"Mixpanel"},"Classes/Mixpanel.html#/s:ZFC8Mixpanel8Mixpanel12mainInstanceFT_CS_16MixpanelInstance":{"name":"mainInstance()","abstract":"<p>Returns the main instance that was initialized.</p>","parent_name":"Mixpanel"},"Classes/Mixpanel.html#/s:ZFC8Mixpanel8Mixpanel15setMainInstanceFT4nameSS_T_":{"name":"setMainInstance(name:)","abstract":"<p>Sets the main instance based on the instance name</p>","parent_name":"Mixpanel"},"Classes/Mixpanel.html#/s:ZFC8Mixpanel8Mixpanel14removeInstanceFT4nameSS_T_":{"name":"removeInstance(name:)","abstract":"<p>Removes an unneeded Mixpanel instance based on its name</p>","parent_name":"Mixpanel"},"Classes/People.html#/s:vC8Mixpanel6People10ignoreTimeSb":{"name":"ignoreTime","abstract":"<p>controls the $ignore_time property in any subsequent MixpanelPeople operation.","parent_name":"People"},"Classes/People.html#/s:FC8Mixpanel6People18addPushDeviceTokenFV10Foundation4DataT_":{"name":"addPushDeviceToken(_:)","abstract":"<p>Register the given device to receive push notifications.</p>","parent_name":"People"},"Classes/People.html#/s:FC8Mixpanel6People21removePushDeviceTokenFV10Foundation4DataT_":{"name":"removePushDeviceToken(_:)","abstract":"<p>Unregister a specific device token from the ability to receive push notifications.</p>","parent_name":"People"},"Classes/People.html#/s:FC8Mixpanel6People3setFT10propertiesGVs10DictionarySSPS_12MixpanelType___T_":{"name":"set(properties:)","abstract":"<p>Set properties on the current user in Mixpanel People.</p>","parent_name":"People"},"Classes/People.html#/s:FC8Mixpanel6People3setFT8propertySS2toPS_12MixpanelType__T_":{"name":"set(property:to:)","abstract":"<p>Convenience method for setting a single property in Mixpanel People.</p>","parent_name":"People"},"Classes/People.html#/s:FC8Mixpanel6People7setOnceFT10propertiesGVs10DictionarySSPS_12MixpanelType___T_":{"name":"setOnce(properties:)","abstract":"<p>Set properties on the current user in Mixpanel People, but doesn&rsquo;t overwrite if","parent_name":"People"},"Classes/People.html#/s:FC8Mixpanel6People5unsetFT10propertiesGSaSS__T_":{"name":"unset(properties:)","abstract":"<p>Remove a list of properties and their values from the current user&rsquo;s profile","parent_name":"People"},"Classes/People.html#/s:FC8Mixpanel6People9incrementFT10propertiesGVs10DictionarySSPS_12MixpanelType___T_":{"name":"increment(properties:)","abstract":"<p>Increment the given numeric properties by the given values.</p>","parent_name":"People"},"Classes/People.html#/s:FC8Mixpanel6People9incrementFT8propertySS2bySd_T_":{"name":"increment(property:by:)","abstract":"<p>Convenience method for incrementing a single numeric property by the specified","parent_name":"People"},"Classes/People.html#/s:FC8Mixpanel6People6appendFT10propertiesGVs10DictionarySSPS_12MixpanelType___T_":{"name":"append(properties:)","abstract":"<p>Append values to list properties.</p>","parent_name":"People"},"Classes/People.html#/s:FC8Mixpanel6People6removeFT10propertiesGVs10DictionarySSPS_12MixpanelType___T_":{"name":"remove(properties:)","abstract":"<p>Removes list properties.</p>","parent_name":"People"},"Classes/People.html#/s:FC8Mixpanel6People5unionFT10propertiesGVs10DictionarySSPS_12MixpanelType___T_":{"name":"union(properties:)","abstract":"<p>Union list properties.</p>","parent_name":"People"},"Classes/People.html#/s:FC8Mixpanel6People11trackChargeFT6amountSd10propertiesGSqGVs10DictionarySSPS_12MixpanelType____T_":{"name":"trackCharge(amount:properties:)","abstract":"<p>Track money spent by the current user for revenue analytics and associate","parent_name":"People"},"Classes/People.html#/s:FC8Mixpanel6People12clearChargesFT_T_":{"name":"clearCharges()","abstract":"<p>Delete current user&rsquo;s revenue history.</p>","parent_name":"People"},"Classes/People.html#/s:FC8Mixpanel6People10deleteUserFT_T_":{"name":"deleteUser()","abstract":"<p>Delete current user&rsquo;s record from Mixpanel People.</p>","parent_name":"People"},"Classes/MixpanelInstance.html#/s:vC8Mixpanel16MixpanelInstance8delegateGSqPS_16MixpanelDelegate__":{"name":"delegate","abstract":"<p>The a MixpanelDelegate object that gives control over Mixpanel network activity.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:vC8Mixpanel16MixpanelInstance10distinctIdSS":{"name":"distinctId","abstract":"<p>distinctId string that uniquely identifies the current user.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:vC8Mixpanel16MixpanelInstance5aliasGSqSS_":{"name":"alias","abstract":"<p>alias string that uniquely identifies the current user.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:vC8Mixpanel16MixpanelInstance6peopleGSQCS_6People_":{"name":"people","abstract":"<p>Accessor to the Mixpanel People API object.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:vC8Mixpanel16MixpanelInstance28showNetworkActivityIndicatorSb":{"name":"showNetworkActivityIndicator","abstract":"<p>Controls whether to show spinning network activity indicator when flushing","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:vC8Mixpanel16MixpanelInstance13flushIntervalSd":{"name":"flushInterval","abstract":"<p>Flush timer&rsquo;s interval.","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:vC8Mixpanel16MixpanelInstance17flushOnBackgroundSb":{"name":"flushOnBackground","abstract":"<p>Control whether the library should flush data to Mixpanel when the app","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:vC8Mixpanel16MixpanelInstance26useIPAddressForGeoLocationSb":{"name":"useIPAddressForGeoLocation","abstract":"<p>Controls whether to automatically send the client IP Address as part of","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:vC8Mixpanel16MixpanelInstance9serverURLSS":{"name":"serverURL","abstract":"<p>The base URL used for Mixpanel API requests.","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:vPs28CustomDebugStringConvertible16debugDescriptionSS":{"name":"debugDescription","abstract":"<p>The base URL used for Mixpanel API requests.","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:vC8Mixpanel16MixpanelInstance14loggingEnabledSb":{"name":"loggingEnabled","abstract":"<p>This allows enabling or disabling of all Mixpanel logs at run time.","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:vC8Mixpanel16MixpanelInstance4nameSS":{"name":"name","abstract":"<p>A unique identifier for this MixpanelInstance</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:vC8Mixpanel16MixpanelInstance29enableVisualEditorForCodelessSb":{"name":"enableVisualEditorForCodeless","abstract":"<p>Controls whether to enable the visual editor for codeless on mixpanel.com","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:vC8Mixpanel16MixpanelInstance24checkForVariantsOnActiveSb":{"name":"checkForVariantsOnActive","abstract":"<p>Controls whether to automatically check for A/B test variants for the","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:vC8Mixpanel16MixpanelInstance28checkForNotificationOnActiveSb":{"name":"checkForNotificationOnActive","abstract":"<p>Controls whether to automatically check for notifications for the","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:vC8Mixpanel16MixpanelInstance24showNotificationOnActiveSb":{"name":"showNotificationOnActive","abstract":"<p>Controls whether to automatically check for and show in-app notifications","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:vC8Mixpanel16MixpanelInstance32miniNotificationPresentationTimeSd":{"name":"miniNotificationPresentationTime","abstract":"<p>Determines the time, in seconds, that a mini notification will remain on","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html":{"name":"MixpanelInstance","abstract":"<p>The class that represents the Mixpanel Instance</p>"},"Classes/People.html":{"name":"People","abstract":"<p>Access to the Mixpanel People API, available as an accessible variable from"},"Classes.html#/s:C8Mixpanel10TweakStore":{"name":"TweakStore","abstract":"<p>Looks up the persisted state for tweaks.</p>"},"Classes/Mixpanel.html":{"name":"Mixpanel","abstract":"<p>The primary class for integrating Mixpanel with your app.</p>"},"Classes.html":{"name":"Classes","abstract":"The following classes are available globally."},"Enums.html":{"name":"Enums","abstract":"The following enums are available globally."},"Extensions.html":{"name":"Extensions","abstract":"The following extensions are available globally."},"Functions.html":{"name":"Functions","abstract":"The following functions are available globally."},"Instance Methods.html":{"name":"Instance Methods","abstract":"The following instance methods are available globally."},"Protocols.html":{"name":"Protocols","abstract":"The following protocols are available globally."},"Structs.html":{"name":"Structs","abstract":"The following structs are available globally."}}